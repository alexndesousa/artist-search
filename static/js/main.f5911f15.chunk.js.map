{"version":3,"sources":["services/authService.js","utils/utils.js","services/discoveryService.js","components/AuthModal.js","App.js","index.js"],"names":["authenticateUser","state","length","text","possible","charAt","Math","floor","random","generateRandomString","url","encodeURIComponent","window","location","getAuthorizationHeader","setHeader","authInfo","query","pairs","hash","substring","split","i","pair","decodeURIComponent","decodeURLParameters","Authorization","token_type","access_token","baseUrl","axios","interceptors","response","use","error","console","log","config","status","originalRequest","milliseconds","Promise","resolve","reject","setTimeout","method","data","headers","sleepRequest","getUsersPlaylists","header","get","then","items","map","info","id","getNumberOfTracksInPlaylist","playlistID","tracks","total","getPlaylistsArtists","amountOfTracks","allArtists","allPromises","offset","push","artistIDs","item","track","artists","name","toLowerCase","concat","all","retrieveAllArtistsAllPlaylists","setUserPlaylistsArtists","a","allUsersPlaylists","playlistId","retrieveAllArtistsPlaylist","resolved","Set","flat","numberOfTracks","theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","paper","position","maxWidth","backgroundColor","background","border","boxShadow","shadows","padding","spacing","borderRadius","AuthModal","open","handleClose","authFunction","classes","Modal","onClose","disableBackdropClick","disableEscapeKeyDown","style","display","alignItems","justifyContent","className","align","ThemeProvider","Button","variant","color","onClick","App","useState","userPlaylistsArtists","searchValue","setSearchValue","sameArtists","setSameArtists","searchEnabled","setSearchEnabled","isMainMenuVisible","isAuthModalVisible","setAuthOpenVisibility","discoveryService","handleAuthClose","useEffect","href","includes","MainMenu","Grid","container","direction","justify","minHeight","margin","width","TextField","label","multiline","value","onChange","event","target","disabled","searchSet","artist","trim","intersection","filter","element","has","calculateSameArtists","join","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5911f15.chunk.js","sourcesContent":["import {generateRandomString} from \"../utils/utils\"\r\n\r\nconst authenticateUser = () => {\r\n    const client_id = \"a4e259d0257745afb6d9bc995d65808d\";\r\n    const redirect_uri = \"http://localhost:3000/\";\r\n    const scope =\r\n      \"user-top-read user-read-private user-read-email playlist-modify-public playlist-read-private\";\r\n    const state = generateRandomString(16);\r\n    const url =\r\n      \"https://accounts.spotify.com/authorize?response_type=token\" +\r\n      \"&client_id=\" +\r\n      encodeURIComponent(client_id) +\r\n      \"&scope=\" +\r\n      encodeURIComponent(scope) +\r\n      \"&redirect_uri=\" +\r\n      encodeURIComponent(redirect_uri) +\r\n      \"&state=\" +\r\n      encodeURIComponent(state);\r\n    window.location = url;\r\n  };\r\n\r\nconst decodeURLParameters = () => {\r\n    const queryString = window.location.hash.substring(1);\r\n    let query = {};\r\n    let pairs = queryString.split(\"&\");\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      let pair = pairs[i].split(\"=\");\r\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n    return query;\r\n  };\r\n\r\n  const getAuthorizationHeader = (setHeader) => {\r\n    const authInfo = decodeURLParameters();\r\n    const newHeader = {\r\n      Authorization: \" \" + authInfo.token_type + \" \" + authInfo.access_token\r\n    };\r\n    setHeader(newHeader);\r\n  };\r\n\r\n  export {authenticateUser, getAuthorizationHeader}","const chunkArray = (array, size) => {\r\n  let newArray = [];\r\n  for (let i = 0; i < array.length; i += size) {\r\n    newArray.push(array.slice(i, i + size));\r\n  }\r\n  return newArray;\r\n};\r\n\r\nconst generateRandomString = length => {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  while (text.length <= length) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nexport { chunkArray, generateRandomString };\r\n","import axios from \"axios\";\r\nimport { authenticateUser } from \"./authService\"\r\n\r\nconst baseUrl = \"https://api.spotify.com/v1\";\r\n\r\nconst sleepRequest = (milliseconds, originalRequest) => {\r\n  console.log(\"originalRequest\", originalRequest);\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(\r\n      () =>\r\n        resolve(\r\n          axios({\r\n            method: originalRequest.method,\r\n            url: originalRequest.url,\r\n            data: originalRequest.data,\r\n            headers: originalRequest.headers\r\n          })\r\n        ),\r\n      milliseconds\r\n    );\r\n  });\r\n};\r\n\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    console.log(\"error.response\", error.response);\r\n    const {\r\n      config,\r\n      response: { status }\r\n    } = error;\r\n    const originalRequest = config;\r\n    if (status === 429 || status === 500) {\r\n      return sleepRequest(\r\n        error.response.headers[\"retry-after\"] * 1000,\r\n        originalRequest\r\n      );\r\n    } else if (status === 401) {\r\n      authenticateUser()\r\n      return Promise.reject(error);\r\n    } else {\r\n      return Promise.reject(error)\r\n    }\r\n  }\r\n);\r\n\r\nconst getUsersPlaylists = (header) => {\r\n  return axios\r\n    .get(baseUrl + \"/me/playlists?limit=50\", { headers: header })\r\n    .then(response => response.data.items.map(info => info.id));\r\n};\r\n\r\nconst getNumberOfTracksInPlaylist = (playlistID, header) => {\r\n  return axios\r\n    .get(baseUrl + \"/playlists/\" + playlistID, { headers: header })\r\n    .then(response => {\r\n      return response.data.tracks.total;\r\n    });\r\n};\r\n\r\nconst getPlaylistsArtists = (playlistID, amountOfTracks, header) => {\r\n  const maxTracksPerPage = 100;\r\n  let allArtists = [];\r\n  let allPromises = [];\r\n\r\n  for (let offset = 0; offset < amountOfTracks; offset += maxTracksPerPage) {\r\n    allPromises.push(\r\n      axios\r\n        .get(\r\n          baseUrl + \"/playlists/\" + playlistID + \"/tracks?offset=\" + offset,\r\n          { headers: header }\r\n        )\r\n        .then(response => {\r\n          const artistIDs = response.data.items\r\n            .map(item => {\r\n              const artists = item.track.artists.map(artists => artists.name.toLowerCase())\r\n              return artists\r\n            })\r\n          allArtists = allArtists.concat(artistIDs);\r\n          return response;\r\n        })\r\n    );\r\n  }\r\n\r\n  return Promise.all(allPromises).then(response => {\r\n    return allArtists;\r\n  });\r\n};\r\n\r\nconst retrieveAllArtistsAllPlaylists = async (header, setUserPlaylistsArtists) => {\r\n  const allUsersPlaylists = await getUsersPlaylists(header)\r\n  const allArtists = await allUsersPlaylists.map(async playlistId => await retrieveAllArtistsPlaylist(header, playlistId))\r\n  Promise.all(allArtists).then(resolved => {\r\n    console.log(`resolved ${resolved}`)\r\n    setUserPlaylistsArtists(new Set(resolved.flat().flat()))\r\n    return resolved})\r\n}\r\n\r\n\r\nconst retrieveAllArtistsPlaylist = async (header, id) => {\r\n  const numberOfTracks = await getNumberOfTracksInPlaylist(id, header)\r\n  return await getPlaylistsArtists(id, numberOfTracks, header)\r\n}\r\n\r\n\r\nexport default {\r\n  retrieveAllArtistsAllPlaylists: retrieveAllArtistsAllPlaylists\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: { main: '#1FD662' },\r\n    },\r\n  });\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      maxWidth: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      borderRadius:\"3%\"\r\n    }\r\n}));\r\n\r\nconst AuthModal = ({\r\n    open,\r\n    handleClose,\r\n    authFunction\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            disableBackdropClick={true}\r\n            disableEscapeKeyDown={true}\r\n            style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n            }}\r\n            >\r\n                <div className={classes.paper} align=\"center\">\r\n                    <h2>Click the button below to link your Spotify account</h2>\r\n                    <div align=\"center\">\r\n                        <ThemeProvider theme={theme}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>authFunction()}> \r\n                                Link Spotify\r\n                            </Button>\r\n                        </ThemeProvider>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthModal;","import React, { useState, useEffect } from \"react\";\r\nimport discoveryService from \"./services/discoveryService\";\r\nimport AuthModal from \"./components/AuthModal\"\r\nimport { authenticateUser, getAuthorizationHeader } from \"./services/authService\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nconst App = () => {\r\n  const [userPlaylistsArtists, setUserPlaylistsArtists] = useState([]);\r\n\r\n  const [header, setHeader] = useState(null);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n  const [sameArtists, setSameArtists] = useState([])\r\n\r\n  const [searchEnabled, setSearchEnabled] = useState(false)\r\n\r\n  const [isMainMenuVisible, setMainMenuVisibility] = useState(true);\r\n  const [isAuthModalVisible, setAuthOpenVisibility] = useState(true);\r\n\r\n  let retrieveAllArtistsAllPlaylists = discoveryService.retrieveAllArtistsAllPlaylists;\r\n\r\n  const handleAuthClose = () => {\r\n    setAuthOpenVisibility(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (header !== null) {\r\n      retrieveAllArtistsAllPlaylists(header, setUserPlaylistsArtists)\r\n    }\r\n  }, [header]);\r\n\r\n  console.log('userPlayli')\r\n    console.log(userPlaylistsArtists)\r\n\r\n  useEffect(() => {\r\n    getAuthorizationHeader(setHeader);\r\n    if(window.location.href !== \"https://alexndesousa.github.io/artist-search/\") {\r\n        handleAuthClose()\r\n    }\r\n    if(window.location.href.includes(\"access_token\")) {\r\n      handleAuthClose()\r\n    }\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userPlaylistsArtists.length !== 0) {\r\n      setSearchEnabled(true)\r\n    }\r\n  }, [userPlaylistsArtists])\r\n\r\n  const handleSearch = event => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  const calculateSameArtists = () => {\r\n    const searchSet = new Set(searchValue.toLowerCase().split(\",\").map(artist => artist.trim()))\r\n    const intersection = new Set([...userPlaylistsArtists].filter(element => searchSet.has(element)))\r\n\r\n    setSameArtists(intersection)\r\n  }\r\n\r\n  const MainMenu = (\r\n    <>\r\n      {isMainMenuVisible ? (\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          style={{ minHeight: \"80vh\", margin: \"0\", width: \"100%\" }}\r\n        >          \r\n          <Grid item>\r\n            <TextField\r\n              id=\"filled-basic\"\r\n              label=\"insert comma separated artists here\"\r\n              margin=\"normal\"\r\n              multiline\r\n              variant=\"filled\"\r\n              value={searchValue}\r\n              onChange={handleSearch}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button disabled={!searchEnabled} variant=\"contained\" onClick={() => calculateSameArtists()}>\r\n              compare\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            {[...sameArtists].join(\", \")}\r\n          </Grid>\r\n        </Grid>\r\n      ) : null}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <AuthModal open={isAuthModalVisible} handleClose={handleAuthClose} authFunction={authenticateUser}/>\r\n      {MainMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}